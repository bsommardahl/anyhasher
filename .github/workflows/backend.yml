name: Backend
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main
      - l4
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main
      - l4
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-cache

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install Deps
        run: cd backend && npm i

      - name: Build
        run: cd backend && npm run build

      - name: Store Artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-artifact
          path: backend/build/

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-cache

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Lint the code
        run: cd backend && npm run lint

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-cache

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Run Unit Tests
        run: cd backend && npm t

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Check for security issue
        run: cd backend && npm audit --audit-level=medium

  static-analysis:
    needs: [security-audit, lint, test]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v1

      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v1
      #   with:
      #     languages: javascript

      # - name: Setup Node
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 16.x

      # - name: Install Deps
      #   run: cd backend && npm i

      # - name: Build
      #   run: cd backend && npm run build

      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v1

  deploy_to_eb:
    #if: github.ref == 'refs/heads/main'
    needs: [static-analysis]
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Get Artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-artifact
          path: backend/build
    
      - name: Deploy to EB
        id: deployment
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: AnyHasher
          environment_name: AnyHasher-env
          version_label: anyhasher-${{ github.run_number }}
          region: us-east-1
          deployment_package: backend/build

  verify-production:
    runs-on: ubuntu-latest
    needs: [deploy_to_eb]
    #if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run Smoke Test
        run: |
          export BACKEND_URL=http://anyhasher-env.eba-ghw9mq3x.us-east-1.elasticbeanstalk.com/
          cd e2e
          npm install
          npm run backend-smoke  